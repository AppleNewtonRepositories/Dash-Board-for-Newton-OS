Dash Board 2013 -- an archaelogical expedition2013-06-29, Tokyo, Japan### SUMMARYTomorrow will mark the 15th anniversary of the release of Dash Board 1.0 for Newton OS. I've been meaning to make Dash Board free for many years now, and this project, "Dash Board 2013" is the long-procrastinated effort to do that.It wasn't quite a simple matter of just uploading the source code to GitHub, though, for reasons described below.### OBSTACLESWell, the first question I had to ask myself is: where the fuck is the source code?The answer is, nobody knows. The best guess is that the canonical 1.5.1 release archive is on CDROM in a spindle in a ziplock bag in a box on a pallet in the basement of the building that housed Five Speed's old office in MÃ¡laga, Spain. That office closed in 2004.OK so I don't have *the* source code. But I found *some* source code on an old, scratched, wine-spattered DVD of backups from my personal workstation in 2001, which amazingly could still be read.However, just because the data could be read, turned out to not mean it could be used easily. The DVD didn't contain a back up of the code itself, it contained a backup of the CVS source control server data. The source code was in there.FIXME: add getting the Netscape MacCVS buildFIXME: then describe having to go back to 10.3 to get a server set up that would serve it properlyFIXME: then describe the funky and unknown provenance of the code wrt DB 1.5.1FIXME: then sheepshaver and NTKFIXME: then how to get this shit into gitETC FINISH THIS README IF THIS SHIT REALLY WORKS...### NOTESI confirmed that the text "2013" doesn't exist anywhere in the project. So, I decided to annotate all changes to the source code made in 2013, as opposed to the 1990s, with "2013".The C++ code has been lost. I don't really know how that happened. I think maybe it had to live in a weird location due to the limitations of the tools?At any rate, the only reason that there was C++ code in Dash Board at all was to make the demo time limit checks and serial number checks (marginally) more difficult to reverse engineer. So the goal for DB2013 will just be remove all the code that wants to use that functionality as unobtrusively as possible.